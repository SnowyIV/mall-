<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geekaca.news.mapper.NewsCommentMapper">

    <resultMap id="BaseResultMap" type="com.geekaca.news.domain.NewsComment">
        <id property="commentId" column="comment_id" jdbcType="BIGINT"/>
        <result property="newsId" column="news_id" jdbcType="BIGINT"/>
        <result property="commentator" column="commentator" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="websiteUrl" column="website_url" jdbcType="VARCHAR"/>
        <result property="commentBody" column="comment_body" jdbcType="VARCHAR"/>
        <result property="commentCreateTime" column="comment_create_time" jdbcType="TIMESTAMP"/>
        <result property="commentatorIp" column="commentator_ip" jdbcType="VARCHAR"/>
        <result property="replyBody" column="reply_body" jdbcType="VARCHAR"/>
        <result property="replyCreateTime" column="reply_create_time" jdbcType="TIMESTAMP"/>
        <result property="commentStatus" column="comment_status" jdbcType="TINYINT"/>
        <result property="isDeleted" column="is_deleted" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        comment_id
        ,news_id,commentator,
        email,website_url,comment_body,
        comment_create_time,commentator_ip,reply_body,
        reply_create_time,comment_status,is_deleted
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_news_comment
        where comment_id = #{commentId,jdbcType=BIGINT}
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from tb_news_comment
        where comment_id = #{commentId,jdbcType=BIGINT}
    </delete>


    <insert id="insertSelective" keyColumn="comment_id" keyProperty="commentId"
            parameterType="com.geekaca.news.domain.NewsComment" useGeneratedKeys="true">
        insert into tb_news_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="commentId != null">comment_id,</if>
            <if test="newsId != null">news_id,</if>
            <if test="commentator != null">commentator,</if>
            <if test="email != null">email,</if>
            <if test="websiteUrl != null">website_url,</if>
            <if test="commentBody != null">comment_body,</if>
            <if test="commentCreateTime != null">comment_create_time,</if>
            <if test="commentatorIp != null">commentator_ip,</if>
            <if test="replyBody != null">reply_body,</if>
            <if test="replyCreateTime != null">reply_create_time,</if>
            <if test="commentStatus != null">comment_status,</if>
            <if test="isDeleted != null">is_deleted,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="commentId != null">#{commentId,jdbcType=BIGINT},</if>
            <if test="newsId != null">#{newsId,jdbcType=BIGINT},</if>
            <if test="commentator != null">#{commentator,jdbcType=VARCHAR},</if>
            <if test="email != null">#{email,jdbcType=VARCHAR},</if>
            <if test="websiteUrl != null">#{websiteUrl,jdbcType=VARCHAR},</if>
            <if test="commentBody != null">#{commentBody,jdbcType=VARCHAR},</if>
            <if test="commentCreateTime != null">#{commentCreateTime,jdbcType=TIMESTAMP},</if>
            <if test="commentatorIp != null">#{commentatorIp,jdbcType=VARCHAR},</if>
            <if test="replyBody != null">#{replyBody,jdbcType=VARCHAR},</if>
            <if test="replyCreateTime != null">#{replyCreateTime,jdbcType=TIMESTAMP},</if>
            <if test="commentStatus != null">#{commentStatus,jdbcType=TINYINT},</if>
            <if test="isDeleted != null">#{isDeleted,jdbcType=TINYINT},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.geekaca.news.domain.NewsComment">
        update tb_news_comment
        <set>
            <if test="newsId != null">
                news_id = #{newsId,jdbcType=BIGINT},
            </if>
            <if test="commentator != null">
                commentator = #{commentator,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="websiteUrl != null">
                website_url = #{websiteUrl,jdbcType=VARCHAR},
            </if>
            <if test="commentBody != null">
                comment_body = #{commentBody,jdbcType=VARCHAR},
            </if>
            <if test="commentCreateTime != null">
                comment_create_time = #{commentCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="commentatorIp != null">
                commentator_ip = #{commentatorIp,jdbcType=VARCHAR},
            </if>
            <if test="replyBody != null">
                reply_body = #{replyBody,jdbcType=VARCHAR},
            </if>
            <if test="replyCreateTime != null">
                reply_create_time = #{replyCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="commentStatus != null">
                comment_status = #{commentStatus,jdbcType=TINYINT},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=TINYINT},
            </if>
        </set>
        where comment_id = #{commentId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.geekaca.news.domain.NewsComment">
        update tb_news_comment
        set news_id             = #{newsId,jdbcType=BIGINT},
            commentator         = #{commentator,jdbcType=VARCHAR},
            email               = #{email,jdbcType=VARCHAR},
            website_url         = #{websiteUrl,jdbcType=VARCHAR},
            comment_body        = #{commentBody,jdbcType=VARCHAR},
            comment_create_time = #{commentCreateTime,jdbcType=TIMESTAMP},
            commentator_ip      = #{commentatorIp,jdbcType=VARCHAR},
            reply_body          = #{replyBody,jdbcType=VARCHAR},
            reply_create_time   = #{replyCreateTime,jdbcType=TIMESTAMP},
            comment_status      = #{commentStatus,jdbcType=TINYINT},
            is_deleted          = #{isDeleted,jdbcType=TINYINT}
        where comment_id = #{commentId,jdbcType=BIGINT}
    </update>

    <insert id="insert" keyColumn="comment_id" keyProperty="commentId"
            parameterType="com.geekaca.news.domain.NewsComment" useGeneratedKeys="true">
        insert into tb_news_comment
        ( news_id, commentator
        , email, comment_body
        , commentator_ip)
        values ( #{newsId,jdbcType=BIGINT}, #{commentator,jdbcType=VARCHAR}
               , #{email,jdbcType=VARCHAR}, #{commentBody,jdbcType=VARCHAR}
               , #{commentatorIp,jdbcType=VARCHAR})
    </insert>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT *
        FROM tb_news_comment
        order by reply_create_time desc limit #{start}, #{limit}
    </select>
    <select id="GetCount" resultType="java.lang.Integer">
        select count(*)
        from tb_news_comment
    </select>

    <update id="batchComments">
        update tb_news_comment set comment_status = 1 where comment_id in
        <foreach collection="ids" separator="," open="(" close=")" item="id">#{id}</foreach>
        and comment_status = 0
    </update>
    <update id="replyComments">
    update tb_news_comment set reply_body= #{replyBody} ,reply_create_time = now() where comment_id = #{commentId,jdbcType=BIGINT}
    </update>
</mapper>
